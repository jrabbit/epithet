		[HIGH PRIORITY] 

- Implement all the NTK_RFC: http://lab.dyne.org/Netsukuku_RFC

- Implement the http://lab.dyne.org/Ntk_MX_request RFC

- update dependencies: 
	- depends on iptables
	- lartc
	
- restore the network when NetsukukuD is closed (call /etc/rc.d/rc.inet1 ?)

- Flash NetsukukuD into an AP and test it.

		[MEDIUM PRIORITY] 

- Equalize multipath routes

- bandwidth measurement
	- do not delete a gw if there still bw passing on it.

- Bandwidth weight for each entry of the qspn (not just rtt and latency):
	- what to use to get the bandwidth of a network interface?
	  Use `iperf' to measure once the max link bw, then monitor with
	  iptables the link and calculate the used bw. 

- Gnodes contiguity
	- gnode re-hook
		- When we have two different gnodes A and C, and
		  then B hooks to A, nothing happens, since C, doesn't
		  receive any qspn_pkt
		- test: two (g)nodes with the same IP
			- currently only in particular situations the rehook
			  isn't possible: A - A,  A - B - A.
	
	- Challenge
		- RSA between rnodes: the nodes which are already hooked ask
		  for the public key to the node which is hooking.
		- Creation of the problem.
		- Resolution of the problem.
		- Diffusion of the reply.
		- Reject of challenge for X time after a first challenge has
		  been completed.
		- Do just one challenge at the same time, reject/delay all the
		  other which came later.
		- If the challenge was rejected/delayed wait the right amount
		  of time and retry.
		- Ban of gnodes which lost the challenge ?
		- Challenge between two gnode not contiguous, which have the
		  same gid.

- Port the kernel route code for *BSD: take a look at rt_ioctl.c and
  rt_socket.c of quagga.

- API for the maps sync with the netsukuku_d daemon.

- Write the documentation for the code that can be used by other
  programs. (By the way it is already commented.)


		[LOW PRIORITY]
		
- Interactive shell/console

- renice the NetsukukuD process?

- option to disable the modification of the routing table

- option to change on runtime the wait-times of the QSPN, radar, etc...
	-normal, -high, -low

- Change with something else the eliminable fatal() calls in netsukuku_hook()

- Ipv6 support: use ff05::23 for multicast. qspn_gnode_count isn't IPv6
  compatible!

- Test request.c
