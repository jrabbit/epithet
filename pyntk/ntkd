#!/usr/bin/env python
##
# This file is part of Netsukuku
# (c) Copyright 2007 Andrea Lo Pumo aka AlpT <alpt@freaknet.org>
# (c) Copyright 2008 Daniele Tricoli aka Eriol <eriol@mornie.org>
#
# This source code is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published 
# by the Free Software Foundation; either version 2 of the License,
# or (at your option) any later version.
#
# This source code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# Please refer to the GNU Public License for more details.
#
# You should have received a copy of the GNU Public License along with
# this source code; if not, write to:
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
##

from optparse import OptionParser

from ntk import VERSION
from ntk.config import settings
from ntk.lib.micro import allmicro_run
from ntk.ntkd import NtkNode


def main():

    usage = '''usage: %prog [OPTION] [NIC LIST]'''

    parser = OptionParser(usage, version='%%prog %s' % VERSION)

    parser.add_option('-c', '--config', dest='config_file',
                      help='override configuration file path')
    parser.add_option('-4', '--ipv4', action='store_true',
                      help='use Internet Protocol version 4')
    parser.add_option('-6', '--ipv6', action='store_true',
                      help='use Internet Protocol version 6')
    parser.add_option('-d', '--debug', action='store_true',
                      help='enable debugging messages')

    (options, args) = parser.parse_args()

    if options.ipv4 and options.ipv6:
        msg = 'Options --ipv4 (-4) and --ipv6 (-6) are mutually exclusive!'
        parser.error(msg)

    if options.ipv4:
        settings.IP_VERSION = 4

    if options.ipv6:
        settings.IP_VERSION = 6

    if options.config_file:
        pass
        # TODO: load settings mechanism from file

    if options.debug:
        import logging
        logging.basicConfig(level=logging.DEBUG,
                            format='%(levelname)s %(message)s')

    NtkNode().run()

    allmicro_run()

if __name__ == '__main__':
    main()
